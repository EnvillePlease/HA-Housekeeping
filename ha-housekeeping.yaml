blueprint:
  name: Daily Housekeeping
  description: Performs backups, log purging and compacting, Deconz Zigbee restart and system reboots.
  domain: automation
  input:
    trigger_time:
      name: Snapshot creation time
      description: The snapshot will be created at this time, every day
      selector:
        time: 
    take_backup:
      name: Take a backup
      description: Do you want to take a backup?
      selector:
        boolean: 
      default: true
    backup_password_required:
      name: Backup Password
      description: Do you want to specify a backup password?
      selector:
        boolean: 
      default: true
    backup_password:
      name: Backup Password
      description: enter the password you want to use to encrypt your backup here.
      selector:
        text:
          type: password
    refresh_deconz:
      name: Refresh Deconz
      description: If you have the Deconz addin, do you want to force a device refresh?
      selector:
        boolean: 
      default: false
    reboot_host:
      name: Reboot Home Assistant Host
      description: Check if you want the host to be rebooted at the end of the housekeeping functions.
      selector:
        boolean: 
      default: false
    send_notification:
      name: Send notification
      description: Sends a notification to a device if enabled
      selector:
        boolean: 
      default: false
    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive notifications
      selector:
        device:
          integration: mobile_app
      default: ""
variables:
  take_backup: !input take_backup
  backup_password_required: !input backup_password_required
  backup_name: "Automated backup {{ now().strftime('%F') }}"
  backup_password: !input backup_password
  refresh_deconz: !input refresh_deconz
  reboot_host: !input reboot_host
  send_notification: !input send_notification
  notification_title: "Automated Daily Housekeeping"
  notification_message: "Home Assistant full backup created. {{ now().strftime('%F') }}"
mode: single
trigger:
  - platform: time
    at: !input trigger_time
action:                      
  - choose:
    - conditions: "{{ take_backup }}"
      sequence:
      - choose:
        - conditions: "{{ backup_password_required }}"
          sequence:
          - service: hassio.backup_full
            data:
              name: "{{ backup_name }}"
              password: "{{ backup_password }}"
        default:
        - service: hassio.backup_full
          data:
            name: "{{ backup_name }}"
    default: []
  - choose:
      - conditions: "{{ send_notification }}"
        sequence:
          - device_id: notify_device
            domain: mobile_app
            type: notify
            title: "{{ notification_title }}"
            message: "{{ notification_message }}"
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: recorder.purge
    data:
      keep_days: 5
      repack: true
  - choose:
      - conditions: "{{ send_notification }}"
        sequence:
          - device_id: !input notify_device 
            domain: mobile_app
            type: notify
            title: "{{ notification_title }}"
            message: "{{ notification_message }}"
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - choose:
      - conditions: "{{ reboot_host }}"
        sequence:
          - service: hassio.host_reboot
            data: {}
